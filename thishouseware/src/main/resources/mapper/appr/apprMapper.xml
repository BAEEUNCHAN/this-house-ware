<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.contractor.app.appr.mapper.ApprMapper">

	<!-- 결재라인 전체조회 -->
	<select id="apprLineAllList" resultType="ApprLineVO">
		SELECT approval_line_no
		, id
		, approval_line_name
		, create_dt
		, recent_used_dt
		, referrer
		, favorite_chk
		FROM approval_line
		<where>
			<if test="approvalLineNo != null and approvalLineNo != ''">
				approval_line_no = #{approvalLineNo}
			</if>
			<if test="id != null and id != ''">
				AND id = #{id}
			</if>
			<if test="approvalLineName != null and approvalLineName != ''">
				AND approval_line_name = #{approvalLineName}
			</if>
		</where>
		ORDER BY create_dt
	</select>

	<!-- 결재라인 단건조회 -->
	<select id="apprLineInfo" parameterType="ApprLineVO"
		resultType="ApprLineVO">
		SELECT approval_line_no
		, id
		, approval_line_name
		, create_dt
		, recent_used_dt
		, referrer
		, favorite_chk
		FROM approval_line
		WHERE approval_line_no = #{approvalLineNo}
	</select>

	<!-- 결재라인 등록 -->
	<insert id="insertApprLine" parameterType="ApprLineVO">
		<selectKey keyProperty="approvalLineNo" resultType="Integer"
			order="BEFORE">
			SELECT NVL(MAX(approval_line_no), 0) + 1
			FROM approval_line
		</selectKey>
		INSERT INTO approval_line (
		approval_line_no
		, id
		, approval_line_name
		, create_dt
		, recent_used_dt
		<if test="referrer != null">
			, referrer
		</if>
		<if test="favoriteChk != null">
			, favorite_chk
		</if>
		)
		VALUES (
		#{approvalLineNo}
		, #{id}
		, #{approvalLineName}
		, sysdate
		, #{recentUsedDt}
		<if test="referrer != null">
			, #{referrer}
		</if>
		<if test="favoriteChk != null">
			, #{favoriteChk}
		</if>
		)
	</insert>

	<!-- APPROVER 테이블에서 결재선 번호 삭제 -->
	<delete id="deleteApproversByLineNo" parameterType="Integer">
	    DELETE FROM approver
	    WHERE approval_line_no = #{approvalLineNo}
	</delete>
	
	<!-- APPROVAL_LINE 테이블에서 결재선 번호 삭제 -->
	<delete id="deleteApprLine" parameterType="Integer">
	    DELETE FROM approval_line
	    WHERE approval_line_no = #{approvalLineNo}
	</delete>

	<!-- 결재라인 수정 -->
	<update id="updateApprLine" parameterType="ApprLineVO">
	    UPDATE approval_line
	        SET id = #{id}
	          , approval_line_name = NVL(NULLIF(#{approvalLineName}, ''), '기본결재라인명') 
	          , create_dt = #{createDt}
	          , recent_used_dt = sysdate
	          , referrer = #{referrer}
	          , favorite_chk = #{favoriteChk}
	    WHERE approval_line_no = #{approvalLineNo}
	</update>

	<!-- 결재자 전체조회 기존 
	<select id="apprAllList" resultType="ApproverVO">
		SELECT a.approver_no
		, a.approver
		, d.department_name
		, e.name
		, e.position_code
		, a.approval_order
		, a.approval_type
		FROM approver a
		JOIN employees e ON a.approver = e.id
		JOIN department d ON e.department_no = d.department_no
		WHERE a.approval_line_no = #{approvalLineNo}
		ORDER BY a.approval_order
	</select>
	-->
	
	<!-- 결재자 전체조회 -->
	<select id="apprAllList" resultType="ApproverVO">
        SELECT a.approver_no,
           a.approver,
           d.department_name,
           e.name,
           e.position_code,
           a.approval_order,
           a.approval_type,
           CASE e.position_code
               WHEN 'a1' THEN '사장'
               WHEN 'a2' THEN '관리자'
               WHEN 'a3' THEN '본부장'
               WHEN 'a4' THEN '팀장'
               WHEN 'a5' THEN '사원'
               WHEN 'a6' THEN '인턴'
               ELSE 'Unknown'
           END AS position_name 
           FROM approver a
           JOIN employees e ON a.approver = e.id
           JOIN department d ON e.department_no = d.department_no
           WHERE a.approval_line_no = #{approvalLineNo}
           ORDER BY a.approval_order
    </select>

	<!-- 결재자 단건조회 -->
	<select id="apprInfo" parameterType="Integer"
		resultType="ApprVO">
		SELECT a.approver_no
		, e.name AS approverName
		, a.approval_order
		, a.approval_line_no
		, a.approval_type AS approvalType
		FROM approver a
		JOIN employees e ON a.approver = e.id
		WHERE a.approver_no = #{approverNo}
	</select>

	<!-- 결재자 등록 -->
	<insert id="insertAppr" parameterType="ApprVO">
		<selectKey keyProperty="approverNo" resultType="Integer"
			order="BEFORE">
			SELECT NVL(MAX(approver_no), 0) + 1
			FROM approver
		</selectKey>
		INSERT INTO approver (
		approver_no
		, approver
		, approval_order
		, approval_status
		, approval_dt
		, rejected_reason
		, edms_doc_no
		, approval_line_no
		, approval_type
		)
		VALUES (
		#{approverNo}
		, #{approver}
		, #{approvalOrder}
		, #{approvalStatus}
		, #{approvalDt}
		, #{rejectedReason}
		, #{edmsDocNo}
		, #{approvalLineNo}
		, #{approvalType}
		)
	</insert>

	<!-- 결재자 삭제 -->
	<delete id="deleteAppr" parameterType="Integer">
		DELETE FROM approver
		WHERE
		approver_no = #{approverNo}
	</delete>

	<!-- 결재자 수정 -->
	<update id="updateAppr">
		UPDATE approver
		SET approver_no
		, approver
		, approval_order
		, approval_status
		, approval_dt
		, rejected_reason
		, edms_doc_no
		, approval_line_no
		, approval_type
		WHERE approval_line_no = #{approvalLineNo}
	</update>
	
	<!-- 결재자 순서 변경 -->
	<update id="updateApprovalOrder">
	    UPDATE approver
	    SET approval_order = #{approvalOrder}
	    WHERE approver_no = #{approverNo}
	</update>

	<!-- 즐겨찾기 전체 조회 -->
	<select id="apprFavoriteAllList" resultType="ApprFavoriteVO">
	    SELECT favorite_no
	        , favorite_name
	        , create_dt
	        , update_dt
	        , approval_line_no
	        , id
	        , favorite_chk
	    FROM approval_line_favorite
	    ORDER BY create_dt
	</select>
	
	<!-- 즐겨찾기 확인 -->
	<select id="ifFavorite" parameterType="map" resultType="int">
	    SELECT COUNT(1)
	      FROM approval_line_favorite
	     WHERE approval_line_no = #{approvalLineNo}
	       AND id = #{id}
	</select>
	
	<!-- 즐겨찾기 업데이트 -->
	<update id="updateFavorite" parameterType="ApprFavoriteVO">
	    UPDATE approval_line_favorite
	       SET favorite_name = #{favoriteName}
	         , update_dt = SYSDATE
	         , favorite_chk = #{favoriteChk}
	     WHERE approval_line_no = #{approvalLineNo}
	       AND id = #{id}
	</update>
	
	<!-- 즐겨찾기 추가 -->
	<insert id="insertFavorite" parameterType="ApprFavoriteVO">
	    <selectKey keyProperty="favoriteNo" resultType="int" order="BEFORE">
	        SELECT SEQ_FAVORITE_NO.NEXTVAL FROM DUAL
	    </selectKey>
	    INSERT INTO approval_line_favorite
	        ( favorite_no
	        , approval_line_no
	        , id
	        , favorite_name
	        , create_dt
	        , favorite_chk )
	    VALUES ( #{favoriteNo}
	           , #{approvalLineNo}
	           , #{id}
	           , #{favoriteName}
	           , SYSDATE
	           , #{favoriteChk} )
	</insert>
	
	<!-- 즐겨찾기 이름을 결재선 이름으로 가져오기-->
    <select id="getApprovalLineName" parameterType="int" resultType="String">
        SELECT approval_line_name
        FROM approval_line
        WHERE approval_line_no = #{approvalLineNo}
    </select>
    
	<!-- 즐겨찾기 삭제 -->
	<delete id="deleteFavorite" parameterType="map">
	    DELETE FROM approval_line_favorite
	     WHERE approval_line_no = #{approvalLineNo}
	       AND id = #{id}
	</delete>

</mapper>